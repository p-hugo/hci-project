{"version":3,"sources":["components/NavBrand.js","components/NavbarMenu.js","components/Navbar.js","components/ModalContent.js","components/Button.js","components/Service.js","components/ServiceCollection.js","App.js","serviceWorker.js","index.js"],"names":["NavBrand","navbarBurgers","Array","prototype","slice","call","document","querySelectorAll","length","forEach","el","addEventListener","target","dataset","$target","getElementById","classList","toggle","react_default","a","createElement","className","aria-label","aria-expanded","data-target","aria-hidden","Component","NavbarMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","active","id","type","href","src","alt","aria-haspopup","aria-controls","role","Navbar","components_NavBrand","components_NavbarMenu","songs","randomId","title","randSong","Math","floor","random","res","ModalContent","_this$props","name","date","from","e","i","key","value","map","entry","onClick","onSubmit","rows","Button","open","onCloseModal","bind","assertThisInitialized","onOpenModal","setState","classNames","index_es","onClose","components_ModalContent","Service","_ref","day","time","src_components_Button","ServiceCollection","services","service","components_Service","servicesDB","App","src_components_Navbar","components_ServiceCollection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48a42e44.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NavBrand extends Component{\n\n    componentDidMount(){\n        const navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n        if(navbarBurgers.length > 0){\n            navbarBurgers.forEach( el => {\n                el.addEventListener('click', () =>{\n\n                    const target = el.dataset.target;\n                    const $target = document.getElementById(target);\n\n                    el.classList.toggle('is-active');\n                    $target.classList.toggle('is-active');\n\n                });\n            })\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"navbar-brand\">\n                <button className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\"\n                        data-target=\"navigationBar\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </button>\n            </div>\n        )\n    }\n}\nexport default NavBrand;","import React, { Component } from'react';\n\nclass NavbarMenu extends Component{\n\n    constructor(props){\n        super();\n        this.state = {\n            active:''\n        };\n\n    }\n\n\n    render(){\n\n        return(\n            <div id=\"navigationBar\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <div className=\"field\">\n                        <p className=\"control has-icons-left\">\n                            <input type=\"text\" className=\"input is-rounded\"/>\n                            <span className=\"icon is-small is-left\">\n                              <i className=\"fas fa-search\"></i>\n                            </span>\n                        </p>\n                    </div>\n                    <a href=\"/#\" className=\"navbar-item\" id=\"songs\">\n                        <span className=\"icon\">\n                            <i className=\"fab fa-itunes-note\"></i>\n                        </span>\n                    </a>\n\n                    <a href=\"/#\" className=\"navbar-item\" id=\"top\">\n                        <span className=\"icon\">\n                            <i className=\"fas fa-heart\"></i>\n                        </span>\n                    </a>\n\n                    <a href=\"/#\" className=\"navbar-item selected\" id=\"\">\n                        <span className=\"icon\">\n                            <i className=\"far fa-calendar\"></i>\n                        </span>\n                    </a>\n                </div>\n                <div className=\"navbar-end\">\n                    <figure className=\"image is-64x64\">\n                        <img src=\"https://via.placeholder.com/100\" alt=\"\" className=\"is-rounded\"/>\n                    </figure>\n\n                    <div className=\"dropdown is-hoverable\">\n                        <div className=\"dropdown-trigger\">\n                            <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\">\n                                <span>Hugo Perdomo</span>\n                                <span className=\"icon is-small\">\n                                <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                            </span>\n                            </button>\n                        </div>\n                        <div className=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n                            <div className=\"dropdown-content\">\n                                <a href=\"/\" className=\"dropdown-item\">Account</a>\n                                <a href=\"/\" className=\"dropdown-item\">Log out</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavbarMenu;","import React, { Component } from 'react';\nimport './Navbar.css';\nimport NavBrand from \"./NavBrand\";\nimport NavbarMenu from \"./NavbarMenu\";\n\nclass Navbar extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            active: \"calendar\"\n        };\n    }\n\n\n    render(){\n\n        return(\n            <nav className=\"navbar is-white\" role=\"navigation\" aria-label=\"main navigation\">\n                <NavBrand/>\n                <NavbarMenu/>\n            </nav>\n        );\n\n\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nlet songs = [\n    {\n        id: randomId(),\n        title: \"Who you say I am\"\n    },\n    {\n        id: randomId(),\n        title: \"Peace\"\n    },\n    {\n        id: randomId(),\n        title: \"Wonder\"\n    },\n    {\n        id: randomId(),\n        title: \"Reckless Love\"\n    },\n    {\n        id: randomId(),\n        title: \"Love Won't Let Me Down\"\n    }\n];\nlet randSong = songs[Math.floor(Math.random() * songs.length)].title;\n\nclass ModalContent extends Component{\n\n    render(){\n        let {name, date} = this.props;\n        if(name === \"Accept\"){\n            return(\n                <div>\n                    <p className=\"title has-text-centered\">\n                        <span role=\"img\" aria-label=\"party\">🎉</span>\n                    </p>\n                    <p className=\"title is-5\">\n                        <span className=\"has-text-warning is-uppercase\">{date}</span><br/>\n                        It's never the same if you're not there! Vote for 3 songs down here 👇\n                    </p>\n                    <div className=\"columns is-centered\">\n                        <div className=\"column is-8\">\n                            {Array.from(Array(3), (e, i) =>\n                                <div className=\"field\" key={i}>\n                                    <div className=\"control\">\n                                        <div className=\"select is-primary is-rounded\">\n                                            <select name=\"select-one-song\" id=\"\">\n                                                <option value=\"\"></option>\n                                                {songs.map( (entry, i) =>\n                                                    <option key={i} value={entry.id}>{entry.title}</option>\n                                                )}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <div className=\"column is-3\">\n                            <button className=\"button is-success is-rounded is-outlined\" onClick={this.props.onSubmit}>Submit</button>\n                        </div>\n                    </div>\n                    <p>60% of your team members love <strong>{randSong}!</strong></p>\n                </div>\n            );\n        }else if(name === \"Decline\"){\n            return(\n                <div>\n                    <p className=\"title has-text-centered\">\n                        <span role=\"img\" aria-label=\"crying emoji\">😢</span>\n                        </p>\n                    <p className=\"title is-5\">\n                        <span className=\"has-text-warning is-uppercase\">{date}</span> <br/>\n                        Is too sad that you're not coming, could you let us know why?\n                    </p>\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <textarea name=\"reason\" id=\"reason\" rows=\"7\" className=\"textarea is-small is-rounded has-fixed-size\"></textarea>\n                        </div>\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <div className=\"column is-3\">\n                            <button className=\"button is-danger is-rounded is-outlined\" onClick={this.props.onSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else {\n            return(\n                <p>Not Found</p>\n            )\n        }\n\n\n    }\n}\n\nfunction randomId(){\n    let res = \"\";\n    while(res.length < 10){\n        res += Math.floor(Math.random()*10);\n    }\n    return res;\n}\n\nexport default ModalContent;","import React, {Component} from 'react';\nimport Modal from 'react-responsive-modal';\nimport './Button.css';\nimport ModalContent from \"./ModalContent\";\nclass Button extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            open: false\n        };\n        this.onCloseModal = this.onCloseModal.bind(this);\n        this.onOpenModal = this.onOpenModal.bind(this);\n    }\n\n    onOpenModal(){\n        this.setState({\n            open: true\n        });\n    }\n\n    onCloseModal(){\n        this.setState({\n            open: false\n        });\n    }\n\n    render(){\n        let {open} = this.state;\n        return(\n            <div className=\"column is-half\">\n                <button className={this.props.classNames} onClick={this.onOpenModal}>{this.props.name}</button>\n                <Modal open={open} onClose={this.onCloseModal}>\n                    <ModalContent name={this.props.name} onSubmit={this.onCloseModal} date={this.props.date}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n\nexport default Button;","import React from 'react'\nimport Button from \"./Button\";\n\n\nconst Service = ({day, date, time}) =>\n    <div className=\"column is-one-quarter-desktop is-half-tablet is-narrow\">\n        <div className=\"notification is-white is-rounded box\">\n            <h1 className=\"title is-size-5 \">\n                {day} <br/>\n                {date} <br/>\n                {time}\n            </h1>\n            <div className=\"columns\">\n                <Button classNames=\"button is-outlined is-danger\" name=\"Decline\" date={date}/>\n                <Button classNames=\"button is-outlined is-success\" name=\"Accept\" date={date}/>\n            </div>\n        </div>\n    </div>;\n\nexport default Service;","import React from 'react'\nimport Service from \"./Service\";\n\nconst ServiceCollection = ({services}) =>\n    <section className=\"section\">\n        <div className=\"columns is-mobile is-multiline is-centered\">\n            {services.map( (service, i) =>\n                <Service key={i} date={service.date} day={service.day} time={service.time}/>\n            )}\n        </div>\n    </section>;\n\nexport default ServiceCollection;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css'\nimport Navbar from \"./components/Navbar\";\nimport ServiceCollection from \"./components/ServiceCollection\";\n// import './debug.css';\n\n\nlet servicesDB = [\n    {day: \"Friday Service\", date:\"November 15th\", time:\"7:30 pm - 9:30 pm\"},\n    {day: \"Sunday Service\", date:\"November 18th\", time:\"5:00 pm - 7:00 pm\"},\n    {day: \"Sunday Service\", date:\"November 25th\", time:\"5:00 pm - 7:00 pm\"},\n    {day: \"Sunday Service\", date:\"December 2nd\", time:\"5:00 pm - 7:00 pm\"},\n    {day: \"Sunday Service\", date:\"December 9th\", time:\"5:00 pm - 7:00 pm\"},\n    {day: \"Friday Service\", date:\"December 13th\", time:\"7:30 pm - 9:30 pm\"}\n];\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Navbar/>\n                <ServiceCollection services={servicesDB}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}